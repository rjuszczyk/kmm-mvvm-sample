// Generated by view binder compiler. Do not edit!
package com.taboo.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.taboo.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFeature1Binding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout error;

  @NonNull
  public final TextView errorMessage;

  @NonNull
  public final Button errorRetry;

  @NonNull
  public final RecyclerView list;

  @NonNull
  public final ProgressBar progress;

  private FragmentFeature1Binding(@NonNull FrameLayout rootView, @NonNull LinearLayout error,
      @NonNull TextView errorMessage, @NonNull Button errorRetry, @NonNull RecyclerView list,
      @NonNull ProgressBar progress) {
    this.rootView = rootView;
    this.error = error;
    this.errorMessage = errorMessage;
    this.errorRetry = errorRetry;
    this.list = list;
    this.progress = progress;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFeature1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFeature1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_feature1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFeature1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.error;
      LinearLayout error = rootView.findViewById(id);
      if (error == null) {
        break missingId;
      }

      id = R.id.errorMessage;
      TextView errorMessage = rootView.findViewById(id);
      if (errorMessage == null) {
        break missingId;
      }

      id = R.id.errorRetry;
      Button errorRetry = rootView.findViewById(id);
      if (errorRetry == null) {
        break missingId;
      }

      id = R.id.list;
      RecyclerView list = rootView.findViewById(id);
      if (list == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = rootView.findViewById(id);
      if (progress == null) {
        break missingId;
      }

      return new FragmentFeature1Binding((FrameLayout) rootView, error, errorMessage, errorRetry,
          list, progress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
